# This file was generated by the `rails generate rspec:install` command. Conventionally, all
# specs live under a `spec` directory, which RSpec adds to the `$LOAD_PATH`.
# The generated `.rspec` file contains `--require spec_helper` which will cause
# this file to always be loaded, without a need to explicitly require it in any
# files.
#
# Given that it is always loaded, you are encouraged to keep this file as
# light-weight as possible. Requiring heavyweight dependencies from this file
# will add to the boot time of your test suite on EVERY test run, even for an
# individual file that may not need all of that loaded. Instead, consider making
# a separate helper file that requires the additional dependencies and performs
# the additional setup, and require it from the spec files that actually need
# it.
#
# See http://rubydoc.info/gems/rspec-core/RSpec/Core/Configuration
RSpec.configure do |config|
  # rspec-expectations config goes here. You can use an alternate
  # assertion/expectation library such as wrong or the stdlib/minitest
  # assertions if you prefer.
  config.expect_with :rspec do |expectations|
    # This option will default to `true` in RSpec 4. It makes the `description`
    # and `failure_message` of custom matchers include text for helper methods
    # defined using `chain`, e.g.:
    #     be_bigger_than(2).and_smaller_than(4).description
    #     # => "be bigger than 2 and smaller than 4"
    # ...rather than:
    #     # => "be bigger than 2"
    expectations.include_chain_clauses_in_custom_matcher_descriptions = true
  end

  # rspec-mocks config goes here. You can use an alternate test double
  # library (such as bogus or mocha) by changing the `mock_with` option here.
  config.mock_with :rspec do |mocks|
    # Prevents you from mocking or stubbing a method that does not exist on
    # a real object. This is generally recommended, and will default to
    # `true` in RSpec 4.
    mocks.verify_partial_doubles = true
  end

  # This option will default to `:apply_to_host_groups` in RSpec 4 (and will
  # have no way to turn it off -- the option exists only for backwards
  # compatibility in RSpec 3). It causes shared context metadata to be
  # inherited by the metadata hash of host groups and examples, rather than
  # triggering implicit auto-inclusion in groups with matching metadata.
  config.shared_context_metadata_behavior = :apply_to_host_groups

# The settings below are suggested to provide a good initial experience
# with RSpec, but feel free to customize to your heart's content.
=begin
  # This allows you to limit a spec run to individual examples or groups
  # you care about by tagging them with `:focus` metadata. When nothing
  # is tagged with `:focus`, all examples get run. RSpec also provides
  # aliases for `it`, `describe`, and `context` that include `:focus`
  # metadata: `fit`, `fdescribe` and `fcontext`, respectively.
  config.filter_run_when_matching :focus

  # Allows RSpec to persist some state between runs in order to support
  # the `--only-failures` and `--next-failure` CLI options. We recommend
  # you configure your source control system to ignore this file.
  config.example_status_persistence_file_path = "spec/examples.txt"

  # Limits the available syntax to the non-monkey patched syntax that is
  # recommended. For more details, see:
  #   - http://rspec.info/blog/2012/06/rspecs-new-expectation-syntax/
  #   - http://www.teaisaweso.me/blog/2013/05/27/rspecs-new-message-expectation-syntax/
  #   - http://rspec.info/blog/2014/05/notable-changes-in-rspec-3/#zero-monkey-patching-mode
  config.disable_monkey_patching!

  # Many RSpec users commonly either run the entire suite or an individual
  # file, and it's useful to allow more verbose output when running an
  # individual spec file.
  if config.files_to_run.one?
    # Use the documentation formatter for detailed output,
    # unless a formatter has already been configured
    # (e.g. via a command-line flag).
    config.default_formatter = "doc"
  end

  # Print the 10 slowest examples and example groups at the
  # end of the spec run, to help surface which specs are running
  # particularly slow.
  config.profile_examples = 10

  # Run specs in random order to surface order dependencies. If you find an
  # order dependency and want to debug it, you can fix the order by providing
  # the seed, which is printed after each run.
  #     --seed 1234
  config.order = :random

  # Seed global randomization in this process using the `--seed` CLI option.
  # Setting this allows you to use `--seed` to deterministically reproduce
  # test failures related to randomization by passing the same `--seed` value
  # as the one that triggered the failure.
  Kernel.srand config.seed
=end
end

def use_seeds
  user_1 = User.create(
  name: "The Potatoe Bros",
  account_type: 0,
  address: "3655 Wyandot St",
  city: "denver",
  state: "CO",
  lat:  39.767128,
  long: -105.015432,
  phone: 2313414141,
  zip: 80211,
  email: "merchant1@email.com",
  bio: "A place to get potatoes",
  password: "user_1",
  password_confirmation: "user_1"
)
user_2 = User.create(
  name: "Lemon Sisters",
  account_type: 0,
  address: "12000 E. 47th Ave",
  city: "denver",
  state: "CO",
  lat:  39.782298,
  long: -104.849306,
  phone: 2313414141,
  zip: 80239,
  email: "regular@email.com",
  bio: "We Sell Lemons",
  password: "user_2",
  password_confirmation: "user_2"
)
user_3 = User.create(
  name: "Raspberry Factory",
  account_type: 0,
  address: "1320 E. Asbury Ave",
  city: "denver",
  state: "CO",
  lat:  39.6800658,
  long: -104.9716056,
  phone: 2313414141,
  zip: 80210,
  email: "must_love_dogs@example.com",
  bio: "Will give you the raspberry",
  password: "user_3",
  password_confirmation: "user_3"
)
user_4 = User.create(
  name: "Apple Orchard",
  account_type: 0,
  address: "1914 Syracuse St",
  city: "denver",
  state: "CO",
  lat:  39.746026,
  long: -104.898268,
  phone: 2313414141,
  zip: 80220,
  email: "a_boys_best_friend@example.com",
  bio: "Get Cheap Apples Here",
  password: "user_4",
  password_confirmation: "user_4"
)
user_5 = User.create(
  name: "Basil Connection",
  account_type: 0,
  address: "4950 Beach Court",
  city: "denver",
  state: "CO",
  lat:  39.7861784,
  long: -105.0178452,
  phone: 2313414141,
  zip: 80221,
  email: "helter_skelter@example.com",
  bio: "The WORLDS Freshest Basil",
  password: "user_5",
  password_confirmation: "user_5"
)
user_6 = User.create(
  name: "Oranges 4 Eva",
  account_type: 0,
  address: "85 Hooker St",
  city: "denver",
  state: "CO",
  lat:  39.717646,
  long: -105.029438,
  phone: 2313414141,
  zip: 80219,
  email: "ruffnbuff@example.com",
  bio:  "Orange You Glad You Didn't Say Bananas",
  password: "user_6",
  password_confirmation: "user_6"
)
user_7 = User.create(
  name: "Produce & Such",
  account_type: 0,
  address: "3051 S. Elm St",
  city: "denver",
  state: "CO",
  lat:  39.6633472,
  long: -104.9298508,
  phone: 2313414141,
  zip: 80222,
  email: "applepie@example.com",
  bio:  "Fresh Produce Here",
  password: "user_7",
  password_confirmation: "user_7"
)
user_8 = User.create(
  name: "Big Bananas",
  account_type: 0,
  address: "2500 E. 4th Ave",
  city: "denver",
  state: "CO",
  lat:  39.722234,
  long: -104.956968,
  phone: 2313414141,
  zip: 80206,
  email: "cute_for_you@example.com",
  bio:  "Our Bananas Are The Biggest",
  password: "user_8",
  password_confirmation: "user_8"
)
user_9 = User.create(
  name: "Family Farm",
  account_type: 0,
  address: "2550 Lowell Blvd",
  city: "denver",
  state: "CO",
  lat:  39.75449560000001,
  long: -105.0339615,
  phone: 2313414141,
  zip: 80211,
  email: "livin_loca889@example.com",
  bio:  "We Farm Families",
  password: "user_9",
  password_confirmation: "user_9"
)
user_10 = User.create!(
  name: "Homegrown Food Stuffs",
  account_type: 0,
  address: "5420 E. 1st Ave",
  city: "denver",
  state: "CO",
  lat:  39.717372,
  long: -104.924031,
  phone: 2313414141,
  zip: 80220,
  email: "dream_gal@example.com",
  bio:  "Food Stuff From Our Farmstead",
  password: "user_10",
  password_confirmation: "user_10"
)

  item_1 = Item.create(name: "Berries")
  item_2 = Item.create(name: "Broccoli")
  item_3 = Item.create(name: "Eggs")
  item_4 = Item.create(name: "Potatoes")
  item_5 = Item.create(name: "Cherries")
  item_6 = Item.create(name: "Oranges")
  item_7 = Item.create(name: "Pineapple")
  item_8 = Item.create(name: "Raspberries")
  item_9 = Item.create(name: "Lemons")
  item_10 = Item.create(name: "Pies")
  item_11 = Item.create(name: "Apples")
  item_12 = Item.create(name: "Carrots")
  item_13 = Item.create(name: "Kale")
  item_14 = Item.create(name: "Lemongrass")
  item_15 = Item.create(name: "Basil")
  item_16 = Item.create(name: "Lettuce")

  item_1.vendor_items.create(user_id: 1, price: 1100, unit: "lb", description: "lb of berries")
  item_1.vendor_items.create(user_id: 3, price: 1200, unit: "lb", description: "lb of berries")
  item_1.vendor_items.create(user_id: 5, price: 1400, unit: "lb", description: "lb of berries")
  item_1.vendor_items.create(user_id: 6, price: 1500, unit: "lb", description: "lb of berries")
  item_1.vendor_items.create(user_id: 7, price: 1600, unit: "lb", description: "lb of berries")

  item_2.vendor_items.create(user_id: 3, price: 200, unit: "lb", description: "a lb of broccoli")
  item_2.vendor_items.create(user_id: 8, price: 230, unit: "lb", description: "a lb of broccoli")
  item_2.vendor_items.create(user_id: 9, price: 240, unit: "lb", description: "a lb of broccoli")
  item_2.vendor_items.create(user_id: 2, price: 250, unit: "lb", description: "a lb of broccoli")
  item_2.vendor_items.create(user_id: 10, price: 260, unit: "lb", description: "a lb of broccoli")

  item_3.vendor_items.create(user_id: 1, price: 500, unit: "case", description: "a case of eggs")
  item_3.vendor_items.create(user_id: 8, price: 512, unit: "case", description: "a case of eggs")
  item_3.vendor_items.create(user_id: 3, price: 513, unit: "case", description: "a case of eggs")
  item_3.vendor_items.create(user_id: 6, price: 514, unit: "case", description: "a case of eggs")
  item_3.vendor_items.create(user_id: 7, price: 516, unit: "case", description: "a case of eggs")

  item_4.vendor_items.create(user_id: 9, price: 120, unit: "lb", description: "a lb of potatoes")
  item_4.vendor_items.create(user_id: 5, price: 170, unit: "lb", description: "a lb of potatoes")
  item_4.vendor_items.create(user_id: 4, price: 100, unit: "lb", description: "a lb of potatoes")
  item_4.vendor_items.create(user_id: 2, price: 150, unit: "lb", description: "a lb of potatoes")
  item_4.vendor_items.create(user_id: 7, price: 75, unit: "lb", description: "a lb of potatoes")

  item_5.vendor_items.create(user_id: 8, price: 1800, unit: "lb", description: "a lb of cherries")
  item_5.vendor_items.create(user_id: 5, price: 1840, unit: "lb", description: "a lb of cherries")
  item_5.vendor_items.create(user_id: 2, price: 1850, unit: "lb", description: "a lb of cherries")
  item_5.vendor_items.create(user_id: 10, price: 1870, unit: "lb", description: "a lb of cherries")
  item_5.vendor_items.create(user_id: 3, price: 1900, unit: "lb", description: "a lb of cherries")

  item_6.vendor_items.create(user_id: 5, price: 2200, unit: "lb", description: "a lb of oranges")
  item_6.vendor_items.create(user_id: 7, price: 2300, unit: "lb", description: "a lb of oranges")
  item_6.vendor_items.create(user_id: 9, price: 2400, unit: "lb", description: "a lb of oranges")
  item_6.vendor_items.create(user_id: 2, price: 2500, unit: "lb", description: "a lb of oranges")
  item_6.vendor_items.create(user_id: 3, price: 2600, unit: "lb", description: "a lb of oranges")

  item_7.vendor_items.create(user_id: 4, price: 3200, unit: "lb", description: "a lb of pineapple")
  item_7.vendor_items.create(user_id: 5, price: 3300, unit: "lb", description: "a lb of pineapple")
  item_7.vendor_items.create(user_id: 7, price: 3400, unit: "lb", description: "a lb of pineapple")
  item_7.vendor_items.create(user_id: 8, price: 3500, unit: "lb", description: "a lb of pineapple")
  item_7.vendor_items.create(user_id: 9, price: 3800, unit: "lb", description: "a lb of pineapple")

  item_8.vendor_items.create(user_id: 4, price: 1200, unit: "lb", description: "a lb of raspberries")
  item_8.vendor_items.create(user_id: 2, price: 1200, unit: "lb", description: "a lb of raspberries")
  item_8.vendor_items.create(user_id: 8, price: 1200, unit: "lb", description: "a lb of raspberries")
  item_8.vendor_items.create(user_id: 6, price: 1200, unit: "lb", description: "a lb of raspberries")
  item_8.vendor_items.create(user_id: 3, price: 1200, unit: "lb", description: "a lb of raspberries")

  item_9.vendor_items.create(user_id: 4, price: 1200, unit: "lb", description: "a lb of lemons")
  item_9.vendor_items.create(user_id: 2, price: 1200, unit: "lb", description: "a lb of lemons")
  item_9.vendor_items.create(user_id: 8, price: 1200, unit: "lb", description: "a lb of lemons")
  item_9.vendor_items.create(user_id: 6, price: 1200, unit: "lb", description: "a lb of lemons")
  item_9.vendor_items.create(user_id: 3, price: 1200, unit: "lb", description: "a lb of lemons")

  item_10.vendor_items.create(user_id: 4, price: 1200, unit: "lb", description: "a lb of pies")
  item_10.vendor_items.create(user_id: 2, price: 1200, unit: "lb", description: "a lb of pies")
  item_10.vendor_items.create(user_id: 8, price: 1200, unit: "lb", description: "a lb of pies")
  item_10.vendor_items.create(user_id: 6, price: 1200, unit: "lb", description: "a lb of pies")
  item_10.vendor_items.create(user_id: 3, price: 1200, unit: "lb", description: "a lb of pies")

  item_11.vendor_items.create(user_id: 4, price: 1200, unit: "lb", description: "a lb of apples")
  item_11.vendor_items.create(user_id: 2, price: 1200, unit: "lb", description: "a lb of apples")
  item_11.vendor_items.create(user_id: 8, price: 1200, unit: "lb", description: "a lb of apples")
  item_11.vendor_items.create(user_id: 6, price: 1200, unit: "lb", description: "a lb of apples")
  item_11.vendor_items.create(user_id: 3, price: 1200, unit: "lb", description: "a lb of apples")

  item_12.vendor_items.create(user_id: 4, price: 1200, unit: "lb", description: "a lb of carrots")
  item_12.vendor_items.create(user_id: 2, price: 1200, unit: "lb", description: "a lb of carrots")
  item_12.vendor_items.create(user_id: 8, price: 1200, unit: "lb", description: "a lb of carrots")
  item_12.vendor_items.create(user_id: 6, price: 1200, unit: "lb", description: "a lb of carrots")
  item_12.vendor_items.create(user_id: 3, price: 1200, unit: "lb", description: "a lb of carrots")

  item_13.vendor_items.create(user_id: 4, price: 1200, unit: "lb", description: "a lb of kale")
  item_13.vendor_items.create(user_id: 2, price: 1200, unit: "lb", description: "a lb of kale")
  item_13.vendor_items.create(user_id: 8, price: 1200, unit: "lb", description: "a lb of kale")
  item_13.vendor_items.create(user_id: 6, price: 1200, unit: "lb", description: "a lb of kale")
  item_13.vendor_items.create(user_id: 3, price: 1200, unit: "lb", description: "a lb of kale")

  item_14.vendor_items.create(user_id: 4, price: 1200, unit: "lb", description: "a lb of lemongrass")
  item_14.vendor_items.create(user_id: 2, price: 1200, unit: "lb", description: "a lb of lemongrass")
  item_14.vendor_items.create(user_id: 8, price: 1200, unit: "lb", description: "a lb of lemongrass")
  item_14.vendor_items.create(user_id: 6, price: 1200, unit: "lb", description: "a lb of lemongrass")
  item_14.vendor_items.create(user_id: 3, price: 1200, unit: "lb", description: "a lb of lemongrass")

  item_15.vendor_items.create(user_id: 4, price: 1200, unit: "lb", description: "a lb of basil")
  item_15.vendor_items.create(user_id: 2, price: 1200, unit: "lb", description: "a lb of basil")
  item_15.vendor_items.create(user_id: 8, price: 1200, unit: "lb", description: "a lb of basil")
  item_15.vendor_items.create(user_id: 6, price: 1200, unit: "lb", description: "a lb of basil")
  item_15.vendor_items.create(user_id: 3, price: 1200, unit: "lb", description: "a lb of basil")

  item_16.vendor_items.create(user_id: 4, price: 1200, unit: "lb", description: "a lb of lettuce")
  item_16.vendor_items.create(user_id: 2, price: 1200, unit: "lb", description: "a lb of lettuce")
  item_16.vendor_items.create(user_id: 8, price: 1200, unit: "lb", description: "a lb of lettuce")
  item_16.vendor_items.create(user_id: 6, price: 1200, unit: "lb", description: "a lb of lettuce")
  item_16.vendor_items.create(user_id: 3, price: 1200, unit: "lb", description: "a lb of lettuce")
end
